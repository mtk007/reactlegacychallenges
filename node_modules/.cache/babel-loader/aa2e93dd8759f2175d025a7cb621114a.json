{"ast":null,"code":"var _jsxFileName = \"/Users/mattm1/Desktop/ElevenFiftyProjects/JavaScript-Library/RedBadge/ReactLegacyChallenge/WD-classComponents-Challenges/src/Components/ToDo/ToDo.js\";\nimport { prependOnceListener } from 'process';\nimport React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Container } from 'reactstrap';\n\nconst Task = props => {\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"App-intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 8\n    }\n  }, \"To do list:\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \"ability to add this to the state\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }, \"ability to display all of the tasks\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, \"ability to evaluated if a task was completed and update the state\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  }));\n};\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: '#GGG',\n    padding: 15,\n    borderRadius: 10,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  itemText: {\n    maxWidth: '80%'\n  }\n});\nexport default Task;","map":{"version":3,"sources":["/Users/mattm1/Desktop/ElevenFiftyProjects/JavaScript-Library/RedBadge/ReactLegacyChallenge/WD-classComponents-Challenges/src/Components/ToDo/ToDo.js"],"names":["prependOnceListener","React","View","Text","StyleSheet","Container","Task","props","styles","item","create","backgroundColor","padding","borderRadius","flexDirection","alignItems","itemText","maxWidth"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,SAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,QAAuC,cAAvC;AACA,SAAQC,SAAR,QAAwB,YAAxB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAA2B,IAAA,KAAK,EAAEC,MAAM,CAACC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAIG;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJH,eAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,eAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAVF,CARH,eAsBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBH,CADF;AA2BD,CA5BD;;AA8BA,MAAMD,MAAM,GAAGJ,UAAU,CAACM,MAAX,CAAkB;AAC/BD,EAAAA,IAAI,EAAE;AACJE,IAAAA,eAAe,EAAE,MADb;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,aAAa,EAAE,KAJX;AAKJC,IAAAA,UAAU,EAAE;AALR,GADyB;AAQ/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF;AARqB,CAAlB,CAAf;AAaA,eAAeX,IAAf","sourcesContent":["import { prependOnceListener } from 'process';\nimport React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport {Container} from 'reactstrap';\n\nconst Task = (props) => {\n  return(\n    <Container className=\"App\" style={styles.item}>\n     <br />\n    \n\n       <h1 className=\"App-intro\">\n        To do list: \n       </h1>\n       <hr />\n       <ul>\n         <li>\n           {/* <Text style = {styles.itemText}>{props.text}</Text> */}\n         </li>\n         <li>\n            ability to add this to the state\n         </li>\n         <li>\n            ability to display all of the tasks\n         </li>\n         <li>\n            ability to evaluated if a task was completed and update the state\n         </li>\n       </ul>\n       <hr />\n     </Container>\n   \n  )\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: '#GGG',\n    padding: 15,\n    borderRadius: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  itemText: {\n    maxWidth: '80%',\n  }\n});\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}